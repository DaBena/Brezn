name: Deployment

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
  workflow_dispatch:  # Manueller Start weiterhin möglich
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./brezn
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to staging
        if: ${{ github.event.inputs.environment == 'staging' || (github.event.inputs.environment == '' && github.ref == 'refs/heads/develop') }}
        run: |
          echo "Deploying to staging environment..."
          # Hier können echte Staging-Deployment-Befehle hinzugefügt werden
          echo "Staging deployment completed successfully"

      - name: Deploy to production
        if: ${{ github.event.inputs.environment == 'production' || (github.event.inputs.environment == '' && github.ref == 'refs/heads/main') }}
        run: |
          echo "Deploying to production environment..."
          # Hier können echte Production-Deployment-Befehle hinzugefügt werden
          echo "Production deployment completed successfully"

      - name: Deployment verification
        run: |
          echo "Deployment completed successfully"
          echo "Environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production') || 'staging' }}"
          echo "Image: ${{ steps.meta.outputs.tags }}"